Machine Server: net002vdcsas001.dcing.corp net002vdcsas002.dcing.corp net002vdcsas003.dcing.corp Porta: 8561 usuário: 92047747 senha: redeFileZilla: host: net002vdcsas432.dcing.corp Protocolo: SFTP Porta:vazio usuário: 92047747 senha: redelibname CobINT '/u01/sasdata/cobranca/DADOS_COBRANCA/CI';libname CobINT '/u01/sasdata/cobranca/DADOS_COBRANCA/STAGE';libname SCORE '/u01/sasdata/cobranca/DADOS_COBRANCA/MODELAGEM/NET/SCORE';libname CI '/u01/sasdata/cobranca/DADOS_COBRANCA/CI';libname CRF '/u01/sasdata/cobranca/DADOS_COBRANCA/CRF';libname DI '/u01/sasdata/cobranca/DADOS_COBRANCA/DI';LIBNAME PDD "/u01/sasdata/cobranca/DADOS_COBRANCA/PDD";libname DI '/u01/sasdata/cobranca/DADOS_COBRANCA/WORK/TERCEIROS/ADVISIA/RAQUEL';libname Wagner '/u01/sasdata/cobranca/DADOS_COBRANCA/WORK/WAGNER';libname CM1 "/u01/sasdata/segmentacao/CM1";%include "%sysget (CIENVVAR)";libname Modelo Trans LIBNAME MODELO ORACLE PATH=NETPROD SCHEMA=MODELO UTILCONN_TRANSIENT=YES OR_BINARY_DOUBLE=NO SQL_FUNCTIONS=ALL DBMAX_TEXT=32767 REREAD_EXPOSURE=YES READBUFF=32767 USER=cdm  PASSWORD="{SAS002}DA7D24241F361EE9" ;LIBNAME P00DW1 ORACLE PATH=P00DW1_SAS SCHEMA=DWH USER=U92047747 PASSWORD="L1v1aTheo*2016";LIBNAME INN ORACLE PATH=INN SCHEMA=INN USER=T6137207 PASSWORD="Wa6n45*001";OPTIONS COMPRESS=YES MPRINT;LIBNAME INN ORACLE REREAD_EXPOSURE=YES DBMAX_TEXT=32767 READBUFF=32767 UTILCONN_TRANSIENT=YES PATH=INN SCHEMA=INN USER=OPS_DBM PASSWORD="{SAS002}C4A1204825B98E4808DFB08507FC7D39";%LET M_ATU = 20190930;%LET M_ANT = 20190831;proc sql;     connect to oracle (USER="U92047747" PASSWORD="Cl#ro20200423" path = "P00DW1_SAS");          create table WAGNER.FT_RESUMO_DIGITAL_REL_&M_ATU. AS SELECT * from connection to oracle          (                SELECT * FROM U93073449.FT_RESUMO_DIGITAL_REL WHERE SK_DATA = &M_ATU.          );run;(-- RETIRA O DUPLICADO Duplicadoproc sort data= NETM_ANALITICO_CAMPANHAS nodupkey out=NETM_ANALITICO_CAMPANHAS;by contrato senha produto vencimento;run;%AcessoNoturnoSAS(t6137207,1,19:00)options compress=yes mprint obs=100;options compress=yes;servidor do sas cobranca 172.21.0.242servidor do sas machine SAS_net002vdcsas001_002_003 net002vdcsas001.dcing.corp porta: 8561/*------------------------------------------------------------------------------	Formart data date	------------------------------------------------------------------------------*/data today; x = today(); format x ddmmyy10.; y = datetime(); format y datetime20.; z = today();format z yymmddn8.;z1 =  put(datepart(y),yymmddn8.);z2 = put(datepart(y),yymmddn8.)*1;put "Formatted day: " x " , formatted datetime: " y ", formatted datetime: " z ;run;-- TEMPO DE BASE %LET REF=201705;%LET FIMMES='31may2017'D;data BasePDD_Instal&Ref.;set  BasePDD_Instal&Ref.;safra = year(dt_instalacao)*100+month(dt_instalacao);Tp_base = intck('month',dt_instalacao,&fimmes.);run;----- ano mes diaSK_DATA = compress(year(DT_ABERTURA)*100+month(DT_ABERTURA)||put(day(DT_ABERTURA),z2.))*1;proc  format=yymmddn8.HORA = COMPRESS(PUT(HOUR(DH_LIGACAO),Z2.)||PUT(minute(DH_LIGACAO),Z2.)||PUT(second(DH_LIGACAO),Z2.));;SAS Statement	Results;   ----+----1----+; put day yymmddc5.;; 09:05; put day yymmddd8.;; 09-05-14; put day yymmddp10.;; 2009.05.14; put day yymmddn8.;; 20090514; Declaração SAS	Resultados;; (------ CONVERTE DATA EM SAFRA;DATA TMP_BX_PGTO_AGG;;SET PDD.TMP_BX_PGTO_AGG;;;SAFRA=put(DATA_BAIXA,yymmn6.)*1;;sk_data = put(DT_ABERTURA,yymmddn8.)*1; ---data 20190101;;safra=put(datepart(data_hora),yymmn6.)*1;;sk_data1 = put(datepart(data_hora),yymmddn8.)*1;;SK_DATA1 = put(datepart(DH_LIGACAO)+1, yymmddn8.)*1;;;RUN;;); ---- + ---- 1 ---- + ---- 2; DAT_REFERENCIA = DATETIME20.  t1.DAT_REFERENCIA = '14Aug2019:0:0:0'dt put event 			datetime. = 10NOV05:03:49:19			datetime7. = 10NOV05			datetime12. = 10NOV05:03			datetime18. = 10NOV05:03:49:19			datetime18.1 = 10NOV05:03:49:19.0			datetime19. = 10NOV2005:03:49:19			datetime20.1 = 10NOV2005:03:49:19.0			datetime21.2 = 10NOV2005:03:49:19.00next=intnx('month','25aug2000'd,1);resultnext represents 01sep2000/*;----================================================================================= conexão odbc sas SAS Customer Support Center http://support.sas.com  SAS Installed Software and Components report file:///C:\Program Files\SASHomeM6\InstallMisc\InstallLogs\DeploymentRegistry.html  SAS Install Center http://support.sas.com/documentation/installcenter/  SAS Technical Support http://support.sas.com/techsup  Downloads and Hot Fixes http://support.sas.com/techsup/dwnload/  SAS Training http://support.sas.com/training  Administrative Services http://support.sas.com/adminservices----================================================================================= novo sas*//*;----================================================================================= novo sas;Pessoal, Boa Tarde,;Por favor, a partir de agora com migração do ambiente SAS, verifiquem que para visualização e acesso ao SASDATA das áreas/departamentos o servidor sofreu alteração para NET002VDCSAS432 e 10.29.244.101.;O antigo servidor NET002VDCSAS430 e 10.29.2.155 será desativado.;Obs.: Atentar para logar, utilizar o LOGIN NOVO (Clarobr), com isso, o mapeamento/exibição será automático.;QQ coisa estou à disposição.;Obrigado,;Marcelo La Scalea;Global Hitss;Diretoria de Operações | Middleware;T.: 55 11 2599-9839;Marcelo.scalea.terceiros@claro.com.br *//*----================================================================================= pra quem utiliza job 12/05/2020Pessoal, Boa tarde,Por favor, quem utiliza alguma configuração DL, algum JOB/Tarefa que utiliza a fila root.sas, a partir de agora passe a utilizar e alterar para  root.sistemas.sas.QQ coisa estou à disposição.Obrigado,Marcelo La ScaleaGlobal HitssDiretoria de Operações | MiddlewareT.: 55 11 99908-9946Marcelo.scalea.terceiros@claro.com.br www.claro.com.br ;----================================================================================= *//*Pessoal, Boa tarde,Por favor, quem utiliza alguma configuração DL, algum JOB/Tarefa que utiliza a fila root.sas, a partir de agora passe a utilizar e alterar para  root.sistemas.sas.QQ coisa estou à disposição.Obrigado,*/;----COnecta Lib %include "%sysget (CIENVVAR)";ods listing close;;/u01/sasdata/cobranca/DADOS_COBRANCA/WORK/WAGNER/*------------------------------ RESUMO DE DADOS > INICIO ----------------------------------------------------------*/  	  PROC MEANS DATA=WORK.GD_CANCELAMENTO_&MES_CANCE. SUM;	VAR VALOR;	var VALOR_CANCELADO;RUN;;);;(--- comando "PROC FREQ"proc freq data=PDD.ESCOB_COMISSAO_&dt_perf._&d_comissao.;	table OPERACAO PRODUTO_ORIGEM PRODUTO/missing;run;;);----- ver que contem na tabela;TITLE "CR_NET_&m0."; proc contents data=COBRANCA.SARBANES_&m0.;run;;ods listing;proc contents data=INN.FT_TITULOS_NET varnum;title "Histogram of Returns";run;/*------------------------------ RESUMO DE DADOS > FIM ----------------------------------------------------------*/;---Descrição;;(-- RETIRA O DUPLICADOproc sort data= NETM_ANALITICO_CAMPANHAS nodupkey out=NETM_ANALITICO_CAMPANHAS;by contrato senha produto vencimento;run;;)TITLE "XXXX"; PROC MEANS DATA=XXXXX.XXXXX MAXDEC=2 MIN MAX MEAN MEDIAN SUM N ; VAR XXX ; RUN ;;TITLE "XXXX"; PROC FREQ DATA=XXXX.XXXXXX; table XXXXXX/MISSING;RUN;;TITLE "flag_anterior"; PROC FREQ DATA=work.CROSS_AGENDA_ATU; where DIA_AGENDAMENTO like "01/mar"; table flag_anterior/MISSING; RUN;;TITLE "XXXXXX"; proc contents data=modelo.contrato;run;;(---- EXPORTAR BASE ---------PROC EXPORT DATA=COBRANCA.GST_201412OUTFILE ="/u01/sasdata/cobranca/DADOS_COBRANCA/WORK/WAGNER/GST_201412.CSV"  DBMS=CSV REPLACE;DELIMITER=";";RUN;;;proc export data=cubo_&ref.;outfile ="/u01/sasdata/cobranca/DADOS_COBRANCA/WORK/WAGNER/cubo_behavior_gst_&ref..txt"  dbms=dlm replace;;delimiter=";";;run;);;---Mapeamento Libname Wagner ;/u01/sasdata/cobranca/DADOS_COBRANCA/WORK/WAGNER;;(---COMANDO CONSULTA SAS E ORACLE;;;;/*Trazendo a base do mes atual do banco de dados de INN para work*/;proc sql;;     connect to oracle (USER="t6137207" PASSWORD="Wa6n45*12" path = "INN");;          create table TESTE AS SELECT * from connection to oracle;          (;                SELECT * FROM T6137207.DCCA_CANC_NET_2016;          );;run;;);;/*Por gentileza, utilizem antes de qualquer código que vocês forem elaborar no SAS o comando abaixo, para que o armazenamento de dados seja realizado de forma comprimida, isso é muito importante para termos mais espaço para trabalhar. */;OPTIONS COMPRESS=YES;;;/*regional são paulo*/;COD_OPERADORA in (3,4,5,6,7,8,9,22,24,27,36,48,52,53,54,55,56,76,103,104,129,141,143,162,187,195,207,209,216,235,241,272,276,279,282,295,386,399,404,409,413,419,420,423,443,456,471,474,487,488,530,533,565,567,572,573,577,595,599,609,621,656,659,661,668,714,715,722,746,756,765,769,791,795,820,833,856,863,865,882,910,924,954,976,579,897,442,869,233,246,464,553,586,761,966,972,615,678;);;CD_OPERADORA in (3,4,5,6,7,8,9,22,24,27,36,48,52,53,54,55,56,76,103,104,129,141,143,162,187,195,207,209,216,235,241,272,276,279,282,295,386,399,404,409,413,419,420,423,443,456,471,474,487,488,530,533,565,567,572,573,577,595,599,609,621,656,659,661,668,714,715,722,746,756,765,769,791,795,820,833,856,863,865,882,910,924,954,976,579,897,442,869,233,246,464,553,586,761,966,972,615,678;);;(-- FUNÇÃO DATA DA CARGA / insert into data _null_; x = today(); format x ddmmyy10.; y = datetime(); format y datetime20.; put "Formatted day: " x " , formatted datetime: " y;run;DATA WORK.AGG_RET_DIGITAL;SET		WORK.AGG_RET_DIGITAL_MCR	WORK.AGG_RET_DIGITAL_MCR_D1	WORK.AGG_RET_DIGITAL_MCR_D2	WORK.AGG_RET_DIGITAL_MCR_D3	WORK.AGG_RET_DIGITAL_MCR_D4 	WORK.AGG_RET_DIGITAL_MCR_D5;DATA_CARGA = TODAY () ; FORMAT DATA_CARGA ddmmyy10.;RUN; proc sql;   insert into WAGNER.AGG_RET_DIGITAL_MCR   select A.*		  	from WORK.WORK.AGG_RET_DIGITAL A; QUIT;)/*--==========================================================================================				INTERVALO DE DATAS--==========================================================================================*/SAS Statement Description Result SAS date valueintnx('day','20nov2002'd,-7,”sameday”); 7 days before 11/20/02 15657 November 13, 2002intnx('month','20nov2002'd,1,"sameday"); 1 month after 11/20/02 15694 December 20, 2002intnx('year','20nov2002'd,-1,"sameday"); 1 year before 11/20/02 15299 November 20, 2001intnx('year','29feb2000'd,1,"sameday"); 1 year after 2/29/00 15034 February 28, 2001intnx('year','29feb2000'd,4,"sameday"); 4 years after 2/29/00 16130 February 29, 2004intnx('month','31mar2003'd,-1,"sameday"); 1 month before 3/31/03 15764 February 28, 2003intnx('month','31mar2004'd,-1,"sameday"); 1 month before 3/31/04 16130 February 29, 2004CONCLUSIONThis paper demonstrated the “sameday” alignment value, a Version 9 enhancement to the data step function INTNX that makesit easier to increment SAS date values./*último dia LAST DAY Last Day*/LAST_DAY = put(intnx('month',DATEPART(DH_LIGACAO), 1)-1, yymmddn8.)/*Transformando numeros em data*/data example;release_date=20180612; release_date = input(put(release_date,8.),yymmdd8.);format release_date ddmmyy10.;run;Data _null_;FORMAT FirstDayofReportingMonth_dt LastDayofReportingMonth_dt REPORTING_DT DATE9.;FORMAT REPORTING_DTTM DATETIME23.;FirstDayofReportingMonth_dt = INTNX ('MONTH', TODAY(), -1, 'B');LastDayofReportingMonth_dt = INTNX ('MONTH', TODAY(), -1, 'E');	call symput("FirstDayofReportingMonth", put (FirstDayofReportingMonth_dt, yymmddn8.));    call symput("LastDayofReportingMonth", put (LastDayofReportingMonth_dt, yymmddn8.));     REPORTING_DT = LastDayofReportingMonth_dt;                                                                                 REPORTING_DTTM = INPUT (PUT (REPORTING_DT, DATE9.) || ':23:59:59', DATETIME18.);	call symput("reporting_date", put (REPORTING_DT, date9.));    call symput("reporting_datetime", left (put (REPORTING_DTTM, datetime23.)));    call symput("reporting_num_date", put (REPORTING_DT, yymmddn8.));Run;;;;(--------------- coNVERTE TEXTO PARA NUMERO ------;data uno;;x="4567.89";;y="4,567.89";;z="4567,89";;k="4.567,89";;output;;run;;;data uno;;set uno;;x2=x*1;;y2=input(y,comma16.5);;z2=tranwrd(z,",",".")*1;;k2=input(k,commax16.5);;run;;);;;(--Operadores de Comparação OPERADORES SAS;GT 	> 		maior que;LT 	< 		menor que;EQ 	=		igual a;LE 	<= 		menor ou igual a;GE 	>= 		maior ou igual a;NE 	~= 		não é igual (diferente);NL 			não é menor;NG 			não é maior;IN 			está no conjunto;);;-----(Conectados Regional São Paulo);%let M0 = 201901;;%let fimmes0 = '31Jan2019'D;;%let M1 = 201801;;%let fimmes1 = '31Jan2018'D;;%let M2 = 201811;;%let M3 = 201810;;;;;data work.SARBANES_&m0._P1; ;set COBRANCA.SARBANES_&m0.; ;safra = &m0.;;;/*tempo de base */;;tp_base_safra = year(DT_INSTALACAO)*100+month(DT_INSTALACAO);;tp_base_meses = intck('month',DT_INSTALACAO,&fimmes0.);;;  	     IF tp_base_meses <= 12 THEN tempo_base = 'a) < 01 ano  ';; ELSE IF	tp_base_meses <= 24 THEN tempo_base = 'b) 01-02 anos';; ELSE IF	tp_base_meses <= 36 THEN tempo_base = 'c) 02-03 anos';; ELSE IF	tp_base_meses > 36 THEN tempo_base  = 'd) > 03 Anos ';;;where COD_OPERADORA in (3,4,5,6,7,8,9,22,24,27,36,48,52,53,54,55,56,76,103,104,129,141,143,162,187,195,207,209,216,235,241,272,276,279,282,295,386,399,404,409,413,419,420,423,443,456,471,474,487,488,530,533,565,567,572,573,577,595,599,609,621,656,659,661,668,714,715,722,746,756,765,769,791,795,820,833,856,863,865,882,910,924,954,976,579,897;) and idStatusContr = 2;;run;;-----)/*		SUBSTITUIR PALAVRAS*/Example 1: Replacing All Ocurrences of a WordThese statements and these values produce these results:   name=tranwrd(name, "Mrs.", "Ms.");   name=tranwrd(name, "Miss", "Ms.");   put name;Example 2: Removing Blanks From the Search StringIn this example, the TRANWRD function does not replace the source string because the target string contains blanks. Neste exemplo, a função TRANWRD não substitui a cadeia de origem porque a cadeia de destino contém espaços em branco.data list;   input salelist $;   length target $10 replacement $3;   target='FISH';	   replacement='NIP';   salelist=tranwrd(salelist,target,replacement);   put salelist;   datalines;CATFISH;;(-- tirar espaço em vazio;	CASE WHEN A.Status_Ctr = COMPRESS('AUMENTO') THEN COMPRESS('AUMENTO_SALDO') ELSE 'XXX' END AS Status_Ctr;);;(--- CONCATENAR CHAVE;DIF=ROUND(VALOR-VALOR_2,0.1);;	CHAVE=COD_OPERADORA||NUM_CONTRATO;;);;;(--base do ESCOB COMISSÃO ;DATA WORK.ESCOB_COMISSAO_&DT_1._P1;;SET COBRANCA.ESCOB_COMISSAO_&DT_1.;;OPER=TRANSLATE(UPCASE(OPERACAO), 'A A A E E I I O O O U U C' , 'Á Ã Â É Ê Í Î Õ Ó Ô Ú Û Ç');;;COD_OPERADORA=(COD_OPER)*1;;NUM_CONTRATO=(CONTRATO)*1;;;TOTAL_PAGTO = (Valor_Amortizacao + JUROS_E_MULTA);;	 IF TOTAL_PAGTO = DIVIDA THEN STATUS_CTR = 'QUITADO'; ;ELSE IF TOTAL_PAGTO > DIVIDA THEN STATUS_CTR = 'QUITADO';;ELSE IF TOTAL_PAGTO < DIVIDA THEN STATUS_CTR = 'DEVEDOR';;/*CONTRATO_CAR=put(put(NUMERO_FATURA,z12.),$12.);*/;/*COD_OPERADORA=substr(CONTRATO_CAR,1,3)*1;*/;/*NUM_CONTRATO=substr(CONTRATO_CAR,4,9)*1;*/;;DESC_PERC = ROUND(DESCONTO /DIVIDA*100,0.1);;	   IF DESC_PERC = 0 THEN FX_DESC = '001_00_00';;ELSE IF	DESC_PERC <= 20 THEN FX_DESC = '002_01_20'; ;ELSE IF DESC_PERC <= 40 AND DESC_PERC > 20 THEN FX_DESC = '003_21_40';;ELSE IF DESC_PERC <= 60 AND DESC_PERC > 40 THEN FX_DESC = '004_41_60';;ELSE IF DESC_PERC <= 80 AND DESC_PERC > 60 THEN FX_DESC = '005_61_80';;ELSE IF DESC_PERC  > 80 THEN FX_DESC = '006_81_M+';;;	   IF ATRASO < 45 THEN FX_ATRASO = '001_000_044';;  ELSE IF ATRASO <= 120 AND ATRASO >= 45 THEN FX_ATRASO = '002_045_120';;  ELSE IF ATRASO >= 121 AND ATRASO <= 150 THEN FX_ATRASO = '004_121_150';;  ELSE IF ATRASO >= 151 AND ATRASO <= 180 THEN FX_ATRASO = '005_150_180';;  ELSE IF ATRASO >= 181 THEN FX_ATRASO = '006_181_M++';;;SAFRA = "&DT_1.";;WHERE PLANO = 1 AND FATURA CONTAINS 'TV/VIRTUA';;RUN;;;);;;---------------------------------------------;;--IF AND ELSE - ARVORE DE DESCISÃO MAILING;(;DATA WORK.BASE_ARVORE_&DAT_ATU._2;;SET WORK.BASE_ARVORE_&DAT_ATU.;;;		 IF (STATUS_CONTRATO = 'CONECTADO' and INTERSIC = 'Não')    	OR ;			(STATUS_CONTRATO = 'CONECTADO' and CARTEIRA = 'GC NET') 	OR ;			(STATUS_CONTRATO = 'DESCONECTADO' and CARTEIRA = 'GC NET') 	THEN EQUIPE='Telecobrança';;	ELSE IF (INTERSIC='Sim' and CARTEIRA = 'Outros') 					THEN EQUIPE='Escritórios';;	ELSE IF (STATUS_CONTRATO = 'DESCONECTADO' AND INTERSIC='Não') 		THEN EQUIPE='Régua';;;RUN;;)	;;;--deletar casos ;(proc sort data =  BaseVisao ;by descending visao; run;;;data BaseVisaoUlt;;set  BaseVisao;;if _N_ > 2 then delete;;keep visao;;run;);;;;Formato data de leitura:;DATE9. Lê dados no formato: 01JAN1960;DDMMYY10. Lê dados no formato: 01/01/1960;Formato padrão de uma constante data no SAS:;"ddmmmyyyy"d  "01JAN1960"d;;;(CROSS COM MARCAÇÃO;PROC SQL;;   CREATE TABLE GRIDWORK.QUERY_FOR_TMP_CROSS_GST_INTERSIC AS ;   SELECT DISTINCT t1.NUM_CONTRATO, ;          t1.COD_OPERADORA, ;          t1.VALOR, ;          t1.idFxAging, ;          t1.SALDO_INTERSIC, ;          t1.MAX_AGING, ;          t1.DATA_EXTRACAO, ;          t1.CONTRATO_INTERSIC, ;          t1.Y_N, ;          /* NMISS DISTINCT_of_NUM_CONTRATO */;            (NMISS(DISTINCT(t2.NUM_CONTRATO))) AS 'NMISS DISTINCT_of_NUM_CONTRATO'n;      FROM WORK.TMP_CROSS_GST_INTERSIC_N t1;           LEFT JOIN PDD.TMP_INTERSIC_FULL_JP_P7 t2 ON (t1.NUM_CONTRATO = t2.NUM_CONTRATO) AND (t1.COD_OPERADORA = ;          t2.COD_OPERADORA);      GROUP BY t1.NUM_CONTRATO,;               t1.COD_OPERADORA,;               t1.VALOR,;               t1.idFxAging,;               t1.SALDO_INTERSIC,;               t1.MAX_AGING,;               t1.DATA_EXTRACAO,;               t1.CONTRATO_INTERSIC,;               t1.Y_N;;QUIT;;;);;(--FORMATAR SAFRA MÊS E ANO;SAFRA_CONSULTA=put(DATA_CONSULTA,yymmn6.)*1;;safra = year(dt_instalacao)*100+month(dt_instalacao);;safra=put(datepart(data_hora),yymmn6.)*1; --- transformando data hora;;%LET DT_PERF=201703;;%LET DT_CART=201702;;%LET DT_FOTO=13;;%LET DT_BAIXA='13Mar2017'D;;LIBNAME PDD "/u01/sasdata/cobranca/DADOS_COBRANCA/PDD";;;data WORK.BX_PAGAMENTO_&DT_PERF._&DT_FOTO.;;set  COBRANCA.BX_PAGAMENTO_&DT_PERF. (WHERE =(DATA_BAIXA <= &DT_BAIXA.));;run;;);(---- EXPORTAR BASE ---------;PROC EXPORT DATA=COBRANCA.GST_201412;OUTFILE ="/u01/sasdata/cobranca/DADOS_COBRANCA/WORK/WAGNER/GST_201412.CSV"  DBMS=CSV REPLACE;;DELIMITER=";";;RUN;;);(-----------DADOS ESTATISTICO COM "PROC MEANS" média maximo -----------;PROC MEANS DATA=WORK.INTERSIC_201607_P1 MAXDEC=2 MIN MAX MEAN MEDIAN SUM N ; VAR CONTRATO VALOR_DAS_PARCELAS_PAGAS2  ; RUN ;;);-- apenas campos numericos;---------------------------------------------;;(--CAMPOS VAZIO EM VALOR -----;;EXPRESSAO NE . --- APENAS VALORES VAZIO ---;EXPRESSAO NOTIN (.,*,) ---- QDO DESEJO VARIAS ;);;;(--FORMART/EXTRAIR CAMPOS COM INPUT E PUT ------------------- Format NR_contratoCONTRATO_CAR=put(put(CONTRATO,z12.),$12.);CD_OPERADORA=substr(CONTRATO_CAR,1,3)*1;NUM_CONTRATO=substr(CONTRATO_CAR,4,9)*1;;;---- INPUT de caracter para numero;---- PUT de numero para caracter;;	OPER=TRANSLATE(UPCASE(OPERACAO), 'A A A E E I I O O O U U C' , 'Á Ã Â É Ê Í Î Õ Ó Ô Ú Û Ç');;	NUM_CONTRATO=INPUT(SUBSTR(PUT(CONTRATO,z12.),4,9),18.);;	CD_OPERADORA=INPUT(SUBSTR(PUT(CONTRATO,z12.),1,3),18.);;;---- DICA DA BEA;;(INPUT(SUBSTR(PUT(t1.CONTRATO, z12.), 4, 9), 18.)) FORMAT=BEST9. AS NUM_CONTRATO1;;;;---- CODIGO NET INTEIRO;DATA PDD.INTERSIC_&DAT.;;SET PDD.INTERSIC_&DAT.;;	;	NUM_CONTRATO=INPUT(SUBSTR(PUT(CONTRATO,z12.),4,9),18.);;	CD_OPERADORA=INPUT(SUBSTR(PUT(CONTRATO,z12.),1,3),18.);;RUN;;;NUM_CONTRATO=INPUT(SUBSTR(PUT(nr_PROTOCOLO,z15.),4,9),18.);;CD_OPERADORA=INPUT(SUBSTR(PUT(nr_PROTOCOLO,z15.),1,3),18.);;220182052497351 15. nr_PROTOCOLO;;CD_OPERADORA=(SUBSTR(NM_DESC_PEDIDO,9,3);;NR_CONTRATO=(SUBSTR(NM_DESC_PEDIDO,12,999);;NM_DESC_PEDIDO contrato=0969906212;----------------------------------------------;);;;(--CONSULTAR TABELA COM FILTRO ;DATA PDD.INTERSIC_&DAT.;;SET cobranca.INTERSIC_&DAT.;;;----- DATA SET COM FILTRO ----;;DATA PDD.GD_&DAT.;;SET COBRANCA.GST_&DAT._V1;;;	WHERE VALOR > 15 AND idFxAging=4 AND idParceiro=2;;;RUN;;);(--CRIAR TABELA AGREGADA ---;;DATA WORK.MOV_CAR_201607_P5;;SET;	WORK.MOV_CAR_201606_P4;	WORK.MOV_CAR_201607_P2;;;RUN;;);------------------------------------------------------------------;;(--TIRAR CARACTER ESPECIAL -----;;DATA PDD.INTERSIC_&DAT.;;SET PDD.INTERSIC_&DAT.;;;	OPER=TRANSLATE(UPCASE(OPERACAO), 'A A A E E I I O O O U U C' , 'Á Ã Â É Ê Í Î Õ Ó Ô Ú Û Ç');;	;RUN;;);;len=length(NUM_CPF); /*CONSIDERA s/ ESPAÇO EM BRANCO*/;len1=lengthc(NUM_CPF); /*CONSIDERA c/ ESPAÇO EM BRANCO*/;;;(--CONSULTA COM CAMPOS EM BRANCO OU VAZIO;PROC SQL;;	CREATE TABLE PDD.ARVORE_2_&DAT. AS SELECT DISTINCT;		A.*,;		CASE WHEN B.BASE NE '' THEN 'Sim' ELSE 'Não' END AS CNRO;	FROM PDD.ARVORE_&DAT. AS A;	LEFT JOIN PDD.CNRO_&DAT. AS B ON A.CONTRATO=B.NUM_CONTRATO AND A.COD_OPERADORA=B.CID_CONTRATO;;QUIT;/*DEZ/14 REGISTROS:115.309*/;);;;(----------- TRANSPOR ------- transpor;proc sql;;create table AgingTransp&Ref. as ;select ;NUM_CONTRATO,;COD_OPERADORA,;sum(case when idFxAging = 1 then valor else 0 end) as valor_Avencer,;sum(case when idFxAging = 2 then valor else 0 end) as valor_Ag30,;sum(case when idFxAging = 3 then valor else 0 end) as valor_Ag60,;sum(case when idFxAging = 4 then valor else 0 end) as valor_Ag90,;sum(case when idFxAging = 5 then valor else 0 end) as valor_Ag120,;sum(case when idFxAging = 6 then valor else 0 end) as valor_Ag150,;sum(case when idFxAging = 7 then valor else 0 end) as valor_Ag180,;sum(case when idFxAging = 8 then valor else 0 end) as valor_Ag181;from AgingNET_&Ref.;group by NUM_CONTRATO, COD_OPERADORA;;quit;;;proc sql;;create table BaseFinal_&ref. as ;select ;a.*,;b.valor_Avencer,;b.valor_Ag30,;b.valor_Ag60,;b.valor_Ag90,;b.valor_Ag120,;b.valor_Ag150,;b.valor_Ag180,;b.valor_Ag181;from BasePDD_Instal&Ref. as a;	left join AgingTransp&Ref. as b;	on a.NUM_CONTRATO = b.NUM_CONTRATO and a.COD_OPERADORA = b.COD_OPERADORA;;quit;;);;;/*--=====================================================================================*/;/*								PRE PDD + ENTRANTE*/;/*							SALDO MENOR QUE R$15,00*/;/*--=====================================================================================*/;(PROC SQL; CREATE TABLE PRE_GST15_&DT_ATU._P2 AS ;SELECT;	"&DT_ATU." AS DT_FOTO;	,"PRE_PDD" AS CLASS_CAR;	,"ND" AS EQUIPE;	,A.NUM_CONTRATO;	,A.COD_OPERADORA;	,A.FXA_&DT_ATU. AS FX_AGING_ATU;	,A.FXA_&DT_ANT. AS FX_AGING_ANT;	,A.VALOR_&DT_ATU. AS SALDO_ATU;	,A.VALOR AS SALDO_ANT;	,A.DIF ;	,(CASE WHEN A.Status_Ctr = '   SAIU' THEN VALOR*-1 ;		WHEN A.Status_Ctr = COMPRESS('REDUÇÃO') THEN A.DIF ;		WHEN A.Status_Ctr = COMPRESS('AUMENTO') THEN A.DIF;		 			ELSE 0 END) FORMAT=BEST10.2 AS VARIACAO;	,A.idFxAging AS idFxAging_ANT;	,A.idFxAging2 AS idFxAging_ATU;;	,(CASE WHEN A.Status_Ctr = COMPRESS('REDUÇÃO') THEN COMPRESS('REDUCAO_SALDO') ;		   WHEN A.Status_Ctr = '   SAIU' THEN COMPRESS('SAINTE_PRE') ;		   WHEN A.Status_Ctr = COMPRESS('AUMENTO') THEN COMPRESS('AUMENTO_SALDO') ;		 			ELSE 'XXX' END) AS Status_Ctr;;FROM PDD.MOV_PRE_PDD_MENOR15_&DT_ATU. AS A;WHERE DIF <> 0;;QUIT;;);(---IF AND ELSE;DATA FINAL_TESTE_&ref.;;SET BASEFINAL_&ref.;;SET BASEFINAL_&ref.;;;	VALOR_2=SUM(valor_Avencer,valor_Ag30,valor_Ag60,valor_Ag90,;				valor_Ag120,valor_Ag150,valor_Ag180,valor_Ag181);;;	DIF=ROUND(VALOR-VALOR_2,0.1);;;	CHAVE = COD_OPERADORA||NUM_CONTRATO;;;		 IF	 TP_BASE <=3  THEN FAIXA_TEMPO = '<= 03'; ;	ELSE IF 4 = TP_BASE THEN FAIXA_TEMPO = '04';;	ELSE IF 5 = TP_BASE THEN FAIXA_TEMPO = '05';;	ELSE IF 6 = TP_BASE THEN FAIXA_TEMPO = '06';;	ELSE IF 7 = TP_BASE THEN FAIXA_TEMPO = '07';;	ELSE IF 8 = TP_BASE THEN FAIXA_TEMPO = '08';;	ELSE IF 9 = TP_BASE THEN FAIXA_TEMPO = '09';;	ELSE IF 10 = TP_BASE THEN FAIXA_TEMPO = '10';;	ELSE IF 11 = TP_BASE THEN FAIXA_TEMPO = '11';;	ELSE IF 12 = TP_BASE THEN FAIXA_TEMPO = '12';;	ELSE IF 12> TP_BASE THEN FAIXA_TEMPO = '> 12';;;	;		 IF 	 TP_BASE <=6  THEN FAIXA_TEMPO = '<= 06'; ;	ELSE IF 12 >= TP_BASE > 6 THEN FAIXA_TEMPO = '07-12';;	ELSE 						   FAIXA_TEMPO = '> 12';;;RUN;;);PROC SQL;;	CREATE TABLE FINAL_TESTE_&ref. AS SELECT;		A.*,;		B.NM_REGIONAL AS REGIONAL,;		B.NM_OPERADORA AS OPER;	FROM FINAL_TESTE_&ref. AS A;	LEFT JOIN COBRANCA.MD_COD_OPERADORA_V3 AS B ;	ON A.COD_OPERADORA=B.CD_OPERADORA;;QUIT;;;;(---- criando uma tabela resumo;PROC SQL;;   CREATE TABLE RESUMO_&REF. AS ;   SELECT "&REF." AS DATA_BASE,;		  t1.OPER, ;          t1.REGIONAL, ;          t1.FAIXA_TEMPO, ;          (COUNT(t1.CHAVE)) AS COUNT_CHAVE, ;          (SUM(t1.VALOR)) FORMAT=BEST12. AS SUM_VALOR,;		  (SUM(t1.valor_Avencer)) FORMAT=BEST12. AS SUM_VALOR_av,;		  (SUM(t1.valor_Ag30)) FORMAT=BEST12. AS SUM_VALOR_30,;		  (SUM(t1.valor_Ag60)) FORMAT=BEST12. AS SUM_VALOR_60,;		  (SUM(t1.valor_Ag90)) FORMAT=BEST12. AS SUM_VALOR_90,;		  (SUM(t1.valor_Ag120)) FORMAT=BEST12. AS SUM_VALOR_120,;		  (SUM(t1.valor_Ag150)) FORMAT=BEST12. AS SUM_VALOR_150,;		  (SUM(t1.valor_Ag180)) FORMAT=BEST12. AS SUM_VALOR_180,;		  (SUM(t1.valor_Ag181)) FORMAT=BEST12. AS SUM_VALOR_181;      FROM FINAL_TESTE_&REF. t1;      GROUP BY t1.OPER, t1.REGIONAL, t1.FAIXA_TEMPO;;	  ;	  ;;;(-------------------- DATA SET UNION ALL --------------DATA PDD.CARTEIRA_MARLON_&DAT.	 PDD.CARTEIRA_ROSALVO_&DAT.	 PDD.CARTEIRA_EDNA_&DAT.;SET PDD.BASE_ARVORE_&DAT._3;	OPER=TRANSLATE(UPCASE(CIDADES_PLANEJ), 'A A A E E I I O O O U U C' , 'Á Ã Â É Ê Í Î Õ Ó Ô Ú Û Ç');	IF EQUIPE ='Telecobrança' THEN OUTPUT PDD.CARTEIRA_ROSALVO_&DAT.;	IF EQUIPE='Escritórios' THEN OUTPUT PDD.CARTEIRA_MARLON_&DAT.;	IF EQUIPE='Régua' THEN OUTPUT PDD.CARTEIRA_EDNA_&DAT.;RUN;;);----------------------------------------------------------------------------------------------;;PROC MEANS DATA=PDD.ESCOB_COMISSAO_&DT_PERF._&D_COMISSAO. MAXDEC=2 MIN MAX MEAN MEDIAN SUM N ; VAR Valor_Amortizacao PARC  ; RUN ;;;PROC SQL; CREATE TABLE GST_TECNICA_&DT_ATU._P1 AS ;SELECT DISTINCT;	A.COD_OPERADORA,;	A.NUM_CONTRATO,;	A.idFxAging,;	B.SK_FXA_AGING_FECHAMENTO,;	SUM(CASE WHEN A.VALOR IS NULL THEN 0 ELSE A.VALOR END) AS VL_GST,;	SUM(CASE WHEN B.VL_FINAL IS NULL THEN 0 ELSE B.VL_FINAL END) AS VL_TECNICA;;FROM WORK.GST_&DT_ATU._P1 AS A;LEFT JOIN WORK.HOMOLOGACAO_&DT_ATU. AS B ON ;(A.COD_OPERADORA = B.CD_OPERADORA) AND (A.NUM_CONTRATO = B.NR_CONTRATO);;GROUP BY A.COD_OPERADORA, A.NUM_CONTRATO;ORDER BY A.COD_OPERADORA, A.NUM_CONTRATO;;QUIT;;;;(----- USO DO MAX -----;;proc sql;;create table GST as select;&ref. as safra,;COD_OPERADORA,;num_CONTRATO,;;max(idFxAging) as MaxAgTotal,;max(case when (idParceiro=2) then idFxAging else 0 end) as MaxAgNET,;max(case when (idParceiro=1) then idFxAging else 0 end) as MaxAgEBT,;sum(valor) as VlTotal,;sum(case when (idParceiro=2) then valor else 0 end) as VlNET,;sum(case when (idParceiro=1) then valor else 0 end) as VlEBT;;from cobranca.gst_&ref.;group by 1,2,3;;quit;;);;(---------------CONVERTE TEXTO PARA NUMERO ------;data uno;;x="4567.89";;y="4,567.89";;z="4567,89";;k="4.567,89";;output;;run;;;data uno;;set uno;;x2=x*1;;y2=input(y,comma16.5);;z2=tranwrd(z,",",".")*1;;k2=input(k,commax16.5);;run;;---------------------------------------------;);;(----- COMO UTILIZAR IF E ELSE NO "DATA SET" ----;data GST_FINAL;;set GST_SCORE;;;if REGIONAL='Regional São Paulo' then REGIONAL= 'Regional Sao Paulo';;;     if MaxAgTotal  = . then FxAtrasoGD='             .';;else if MaxAgTotal le 1 then FxAtrasoGD='        0 dias';;else if MaxAgTotal le 2 then FxAtrasoGD='   1 a 30 dias';;else if MaxAgTotal le 3 then FxAtrasoGD='  31 a 60 dias';;else if MaxAgTotal le 4 then FxAtrasoGD='  61 a 90 dias';;else if MaxAgTotal le 5 then FxAtrasoGD=' 91 a 120 dias';;else if MaxAgTotal le 6 then FxAtrasoGD='121 a 150 dias';;else if MaxAgTotal le 7 then FxAtrasoGD='151 a 180 dias';;else if MaxAgTotal gt 7 then FxAtrasoGD='    + 180 dias';;;     if MaxAgNET  = . then FxAtrasoNETGD='             .';;else if MaxAgNET le 1 then FxAtrasoNETGD='        0 dias';;else if MaxAgNET le 2 then FxAtrasoNETGD='   1 a 30 dias';;else if MaxAgNET le 3 then FxAtrasoNETGD='  31 a 60 dias';;else if MaxAgNET le 4 then FxAtrasoNETGD='  61 a 90 dias';;else if MaxAgNET le 5 then FxAtrasoNETGD=' 91 a 120 dias';;else if MaxAgNET le 6 then FxAtrasoNETGD='121 a 150 dias';;else if MaxAgNET le 7 then FxAtrasoNETGD='151 a 180 dias';;else if MaxAgNET gt 7 then FxAtrasoNETGD='    + 180 dias';;;     if MaxAgEBT  = . then FxAtrasoEBTGD='             .';;else if MaxAgEBT le 1 then FxAtrasoEBTGD='        0 dias';;else if MaxAgEBT le 2 then FxAtrasoEBTGD='   1 a 30 dias';;else if MaxAgEBT le 3 then FxAtrasoEBTGD='  31 a 60 dias';;else if MaxAgEBT le 4 then FxAtrasoEBTGD='  61 a 90 dias';;else if MaxAgEBT le 5 then FxAtrasoEBTGD=' 91 a 120 dias';;else if MaxAgEBT le 6 then FxAtrasoEBTGD='121 a 150 dias';;else if MaxAgEBT le 7 then FxAtrasoEBTGD='151 a 180 dias';;else if MaxAgEBT gt 7 then FxAtrasoEBTGD='    + 180 dias';;;;     if SCORE_BEHAVIOR eq .   then FxScoreBehavior='.        ';;else if SCORE_BEHAVIOR le 633 then FxScoreBehavior='001--633 ';;else if SCORE_BEHAVIOR le 704 then FxScoreBehavior='634--704 ';;else if SCORE_BEHAVIOR le 758 then FxScoreBehavior='705--758 ';;else if SCORE_BEHAVIOR le 793 then FxScoreBehavior='759--793 ';;else if SCORE_BEHAVIOR le 818 then FxScoreBehavior='794--818 ';;else if SCORE_BEHAVIOR le 841 then FxScoreBehavior='819--841 ';;else if SCORE_BEHAVIOR le 856 then FxScoreBehavior='842--856 ';;else if SCORE_BEHAVIOR le 879 then FxScoreBehavior='857--879 ';;else if SCORE_BEHAVIOR le 893 then FxScoreBehavior='880--893 ';;else if SCORE_BEHAVIOR gt 893 then FxScoreBehavior='894--1000';;;;     if SCORE_BEHAVIOR eq .   then FxRiscoBehavior='.         ';;else if SCORE_BEHAVIOR le 633 then FxRiscoBehavior='Altissimo ';;else if SCORE_BEHAVIOR le 704 then FxRiscoBehavior='Alto      ';;else if SCORE_BEHAVIOR le 758 then FxRiscoBehavior='Alto      ';;else if SCORE_BEHAVIOR le 793 then FxRiscoBehavior='Medio     ';;else if SCORE_BEHAVIOR le 818 then FxRiscoBehavior='Medio     ';;else if SCORE_BEHAVIOR le 841 then FxRiscoBehavior='Baixo     ';;else if SCORE_BEHAVIOR le 856 then FxRiscoBehavior='Baixo     ';;else if SCORE_BEHAVIOR le 879 then FxRiscoBehavior='Baixissimo';;else if SCORE_BEHAVIOR le 893 then FxRiscoBehavior='Baixissimo';;else if SCORE_BEHAVIOR gt 893 then FxRiscoBehavior='Baixissimo';;;run;	;;);;PROC SQL;;   CREATE TABLE WORK.QUERY_FOR_SAINTE_PDD_201610_P4 AS ;   SELECT /* SUM_of_VALOR_201609 */;            (SUM(t1.VALOR_201609)) AS SUM_of_VALOR_201609, ;          /* SUM_of_VLR_CANC */;            (SUM(t1.VLR_CANC)) AS SUM_of_VLR_CANC, ;          /* TOTAL_PAGO */;            (SUM(t1.VLR_PAGO)) AS TOTAL_PAGO, ;          /* QTDE_CTR_CANC */;            (COUNT(t1.NUM_CONTRATO)) AS QTDE_CTR_CANC;      FROM WORK.SAINTE_PDD_201610_P4 t1;      WHERE t1.VLR_PAGO = .;;QUIT;;);(--COMANDO DE COMPRIMENTO (LENGTH & MENOR VENCIMENTO);set  Cnro_UltNoDup&safra. ;;Atraso = intck('Day',NET_Menor_Vct,visao);;length AgingCNRO $20.;;if Atraso <= 0 then AgingCNRO = 'A vencer'; else;if Atraso > 0 and Atraso <= 30 then AgingCNRO = 'Aging 30'; else;if Atraso > 30 and Atraso <= 60 then AgingCNRO = 'Aging 60'; else;if Atraso > 60 and Atraso <= 90 then AgingCNRO = ' Aging 90'; else;if Atraso > 90 and Atraso <= 120 then AgingCNRO = ' Aging 120'; else;if Atraso > 120 and Atraso <= 150 then AgingCNRO = 'Aging 150'; else;if Atraso > 150 and Atraso <= 180 then AgingCNRO = 'Aging 180'; else;if Atraso > 180 then AgingCNRO = 'Aging 180+'; else AgingCNRO ='Erro';;run;);;/*CABELHO COM ESPAÇO NO TÍTULO*/PROC MEANS DATA=TMP_CAR_JDE_201701 MAXDEC=2 MIN MAX MEAN MEDIAN SUM N; 	VAR 'Total Global'n; RUN;;;--- DATA HORA;WHERE DATEPART(T1.DATA_HORA_INICIO_DISCAGEM)BETWEEN'01DEC2018'd AND'31DEC2018'd;(-- CABEÇALHO COM ESPAÇO;;PROC SQL; CREATE TABLE CAR_JDE_201701_P1 AS ;SELECT DISTINCT;	Cia,;	Companhia,;	'Cód.'N AS COD_CLIENTE,;	'Nome Cliente'N AS NM_CLIENTE,;	MAX('Dt. Vcto'N) FORMAT=DATE9. AS VCTO_M_ANTIGO,;	;	SUM('Total Global'N) AS SALDO_CAR;FROM TMP_CAR_JDE_201701;GROUP BY 1,2,3,4;ORDER BY 1,2,3,4;;;QUIT;;);;(-- CALCULO DE DATA;DATA CAR_JDE_201701_P2;;SET CAR_JDE_201701_P1;;DIAS_ATRASO = ('31/JAN/2017'D) - VCTO_M_ANTIGO;;RUN;;);;(--renomear;RENAME= Data Set Option;Changes the name of a variable.;Valid in:;DATA step and PROC steps;Category:;Variable Control;SyntaxRENAME=(old-name-1=new-name-1 <old-name-2=new-name-2 …> );Syntax Descriptionold-name;is the variable that you want to rename.new-name;is the new name of the variable. It must be a valid SAS name.;;data one;;input x y z;;datalines;;24 595 439;243 343 034;;;proc print data=one;;run;;data two(rename=(x=keys));;set one;;z=x+y;;run;;proc print data=two;;RENAME= Data Set Option 57;);;;---( exemplo de macro empilhando tabelas;;options macrogen mlogic mprint symbolgen mfile;;filename mprint 'C:\Users\Sarath Annapareddy\Desktop\macroresol.sas';;;data dsn1;;input a @@;;cards;;1 2 3 5 6 7;;run;;;data dsn2;;input a @@;;cards;;4 5 6 9 8 6;;run;;;data dsn3;;input a @@ ;;cards;;21 22 23 24 25 26;;run;;;data dsn4;;input a @@;;cards;;10 11 12 13 14 15;;run;;;*Concatenating all the 4 datasets using a macro with the %DO LOOP;%macro concat;;data all;;set;%do i = 1 %to 4;;dsn&i;%end;;;;run;;%mend;;;%concat;;---;);(------ criar tabela temporaria;data CRF_Conectados_201901;   input NR_CONTRATO  CD_OPERADORA ;   datalines;;333241071 3;333241071 3;333241071 3;9890426 5;157319720 141;339953480 3;339953480 3;10622579 4;1390012 924;248420861 423;9119954 820;15899489 7;15899489 7;373618712 3;161019068 143;390288734 3;334246883 3;9010393 599;392645569 3;392061796 3;9059407 272;2679321 54;392659390 3;320013924 3;8832678 5;1009544 954;1058117 599;1058117 599;318578736 3;337379604 3;10107498 820;391891884 3;14465715 52;;;322659481	3;220863052	121;324093779	3;322096452	3;384294380	235;12731413	10;153387241	141;11319571	55;305294003	3;240303224	413;;data Ages;;   input Name $ Age;;   datalines;;Miguel 53;Brad 27;Willie 69;Marc 50;Sylvia 40;Arun 25;Gary 40;Becky 51;Alma 39;Tom 62;Kris 66;Paul 60;Randy 43;Barbara 52;Virginia 72;;;proc print data=Ages (firstobs=2 obs=12);;run;;PROC PRINT Output Using OBS= and FIRSTOBS=;;                               The SAS System                         1;;                            Obs    Name      Age;;                              2    Brad       27;                              3    Willie     69;                              4    Marc       50;                              5    Sylvia     40;                              6    Arun       25;                              7    Gary       40;                              8    Becky      51;                              9    Alma       39;                             10    Tom        62;                             11    Kris       66;                             12    Paul       60;							 ;------ criar tabela temporaria );;Example 1: Using OBS= to Specify When to Stop Processing Observations;This example illustrates the result of using OBS= to tell SAS when to stop processing observations. This example creates a SAS data set and executes the PRINT procedure with FIRSTOBS=2 and OBS=12. The result is 11 observations, that is (12 - 2) + 1 = 11. The result of OBS= in this situation appears to be the observation number that SAS processes last, because the output starts with observation 2, and ends with observation 12. This situation is only a coincidence.;;data Ages;;   input Name $ Age;;   datalines;;Miguel 53;Brad 27;Willie 69;Marc 50;Sylvia 40;Arun 25;Gary 40;Becky 51;Alma 39;Tom 62;Kris 66;Paul 60;Randy 43;Barbara 52;Virginia 72;;;proc print data=Ages (firstobs=2 obs=12);;run;;PROC PRINT Output Using OBS= and FIRSTOBS=;;                               The SAS System                         1;;                            Obs    Name      Age;;                              2    Brad       27;                              3    Willie     69;                              4    Marc       50;                              5    Sylvia     40;                              6    Arun       25;                              7    Gary       40;                              8    Becky      51;                              9    Alma       39;                             10    Tom        62;                             11    Kris       66;                             12    Paul       60;;Example 2: Using OBS= with WHERE Processing;This example illustrates the result of using OBS= along with WHERE processing. The example uses the data set that was created in Example 1, which contains 15 observations.;;First, here is the PRINT procedure with a WHERE statement. The subset of the data results in 12 observations:;;proc print data=Ages;                                                                                            ;   where Age LT 65;                                                                                                                     ;run;;PROC PRINT Output Using a WHERE Statement;;                               The SAS System                         1;;                            Obs    Name       Age;;                              1    Miguel      53;                              2    Brad        27;                              4    Marc        50;                              5    Sylvia      40;                              6    Arun        25;                              7    Gary        40;                              8    Becky       51;                              9    Alma        39;                             10    Tom         62;                             12    Paul        60;                             13    Randy       43;                             14    Barbara     52;Executing the PRINT procedure with the WHERE statement and OBS=10 results in 10 observations, that is (10 - 1) + 1 = 10. Note that with WHERE processing, SAS first subsets the data and applies OBS= to the subset.;;proc print data=Ages (obs=10);                                                                                            ;   where Age LT 65;                                                                                                                     ;run;;PROC PRINT Output Using a WHERE Statement and OBS=;;                               The SAS System                         2;;                            Obs    Name      Age;;                              1    Miguel     53;                              2    Brad       27;                              4    Marc       50;                              5    Sylvia     40;                              6    Arun       25;                              7    Gary       40;                              8    Becky      51;                              9    Alma       39;                             10    Tom        62;                             12    Paul       60;The result of OBS= appears to be how many observations to process, because the output consists of 10 observations, ending with the observation number 12. However, the result is only a coincidence. If you apply FIRSTOBS=2 and OBS=10 to the subset, then the result is nine observations, that is (10 - 2) + 1 = 9. OBS= in this situation is neither the observation number to end with nor how many observations to process; the value is used in the formula to determine when to stop processing.;;proc print data=Ages (firstobs=2 obs=10);                                                                                            ;   where Age LT 65;                                                                                                                     ;run;;PROC PRINT Output Using WHERE Statement, OBS=, and FIRSTOBS=;;                               The SAS System                         3;;                            Obs    Name      Age;;                              2    Brad       27;                              4    Marc       50;                              5    Sylvia     40;                              6    Arun       25;                              7    Gary       40;                              8    Becky      51;                              9    Alma       39;                             10    Tom        62;                             12    Paul       60;;Example 3: Using OBS= When Observations Are Deleted;This example illustrates the result of using OBS= for a data set that has deleted observations. The example uses the data set that was created in Example 1, with observation 6 deleted.;;First, here is PROC PRINT output of the modified file:;;proc print data=Ages;;run;;PROC PRINT Output Showing Observation 6 Deleted;;                               The SAS System                         1;;                           Obs    Name        Age;;                             1    Miguel       53;                             2    Brad         27;                             3    Willie       69;                             4    Marc         50;                             5    Sylvia       40;                             7    Gary         40;                             8    Becky        51;                             9    Alma         39;                            10    Tom          62;                            11    Kris         66;                            12    Paul         60;                            13    Randy        43;                            14    Barbara      52;                            15    Virginia     72;Executing the PRINT procedure with OBS=12 results in 12 observations, that is (12 - 1) + 1 = 12:;;proc print data=Ages (obs=12);;run;;PROC PRINT Output Using OBS=;;                               The SAS System                         2;;                            Obs    Name      Age;;                              1    Miguel     53;                              2    Brad       27;                              3    Willie     69;                              4    Marc       50;                              5    Sylvia     40;                              7    Gary       40;                              8    Becky      51;                              9    Alma       39;                             10    Tom        62;                             11    Kris       66;                             12    Paul       60;                             13    Randy      43;The result of OBS= appears to be how many observations to process, because the output consists of 12 observations, ending with the observation number 13. However, if you apply FIRSTOBS=2 and OBS=12, the result is 11 observations, that is (12 - 2) + 1 = 11. OBS= in this situation is neither the observation number to end with nor how many observations to process; the value is used in the formula to determine when to stop processing.;;proc print data=Ages (firstobs=2 obs=12);;run;;PROC PRINT Output Using OBS= and FIRSTOBS=;;                               The SAS System                         3;;                            Obs    Name      Age;;                              2    Brad       27;                              3    Willie     69;                              4    Marc       50;                              5    Sylvia     40;                              7    Gary       40;                              8    Becky      51;                              9    Alma       39;                             10    Tom        62;                             11    Kris       66;                             12    Paul       60;                             13    Randy      43;							 ;---==========================================================================================================;--- coletar amostragem da tabela;---==========================================================================================================;TITLE "MK1_&M4.";;proc print data=work.ocorrencias_mk1_201805_201902 (obs=10); where safra=&M4. and num_contrato = 216972301 ; run;							 ;proc print data=work.NET_GESTAO_BASE_SAS (obs=10); where STATUS_ORIGINAL = "CONECTADO" and adulto = "Sim" ; run;	;;data work.cr_cmv_p3set work.cr_cmv_p2INFORMAT        CALL_ID	$CHAR19.CD_NAVEGACAO_CLIENTE_URA	$CHAR12.CD_RAT_MOT_PRI	$CHAR27.CD_RAT_PROD_PRI	$CHAR22.CD_RAT_PROD_SEC	$CHAR10.COD_PLATAFORMA	$CHAR5.COD_TIPO_DESCONEXAO	BEST2.DS_SCRIPTPOINT	$CHAR81.DT_FIM_LIGACAO	YYMMDD10.DT_INICIO_LIGACAO	YYMMDD10.DT_VENCIMENTO_FATURA	$CHAR25.FC_DIRECIONADO_RETIDO	$CHAR18.FG_LIG_IDENTIFICADA	$CHAR3.FN_CORPORATIVO	$CHAR3.FN_DIA_UTIL	$CHAR8.NM_AGRUPAMENTO_PLATAFORMA	$CHAR17.NM_EXPURGO_URA	$CHAR21.NM_FAIXA_ETARIA	$CHAR16.NM_MARCA	$CHAR11.NM_MOTIVO_URA	$CHAR12.NM_PLATAFORMA	$CHAR16.NM_SUB_MARCA	$CHAR3.NM_SUB_MOTIVO_URA	$CHAR13.NM_TEMPO_BASE	$CHAR20.NM_TP_CLIENTE	$CHAR15.NR_DDD	$CHAR2.NR_DURACAO_ATENDIMENTO	BEST4.NR_HORA_FIM_LIGACAO	BEST6.NR_HORA_INICIO_LIGACAO	BEST6.NR_SCRIPTPOINT	$CHAR18.NUM_DNIS	BEST5.NUM_NTC	BEST15.NUM_NTC_ANI	$CHAR16.QT_LIGACAO_REAL	BEST1.QT_RAT_MOT_FINAL	BEST32.QT_RAT_MOT_PRI	BEST32.QT_RAT_MOT_RES	BEST32.QT_RAT_MOT_SEC	BEST32.QT_RAT_PROD_FINAL	BEST32.QT_RAT_PROD_PRI	BEST32.QT_RAT_PROD_RES	BEST32.QT_RAT_PROD_SEC	BEST32.REGIONAL	$CHAR13.STATUS_CLIENTE	$CHAR3.TIPO_DESCONEXAO	$CHAR25.TP_PLANO_CLIENTE	$CHAR50.UF	$CHAR2.run;%macro getlasttable;	%if not %symexist(date) %then %global date;	%let date =;	proc sql noprint;			select max(scan(memname,2,'_')) into :date			from dictionary.tables			where 				libname = upcase("tables")				and memname like 'RESULT%CREDIT';	quit;%mend;%getlasttable;%put &=date;201903